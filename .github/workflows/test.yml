name: Lint, Test, Build and Deploy
on:
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache node modules
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Set commit range variables
        run: |
          echo "PR_HEAD=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          echo "PR_BASE=${{ github.event.pull_request.base.sha }}" >> $GITHUB_ENV

      - name: Commit lint
        run: npx commitlint --from $PR_BASE --to $PR_HEAD

      - name: Code lint
        run: npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache node modules
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Test
        run: npm test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: truongtrongtin/leave-tracker-api:latest
          cache-from: type=registry,ref=truongtrongtin/leave-tracker-api:buildcache
          cache-to: type=registry,ref=truongtrongtin/leave-tracker-api:buildcache,mode=max

      - name: Executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            cd ~/leave-tracker-api

            docker run --rm \
              -v /var/run/docker.sock:/var/run/docker.sock \
              -v "$PWD:$PWD" \
              -w="$PWD" \
              docker/compose:1.29.2 pull -q leave-tracker-api

            docker run --rm \
              -v /var/run/docker.sock:/var/run/docker.sock \
              -v "$PWD:$PWD" \
              -w="$PWD" \
              docker/compose:1.29.2 up -d

            docker image prune -f

            docker exec leave-tracker-api node dist/migrate
